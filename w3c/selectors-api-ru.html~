<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">

<html lang="ru">
  <meta content="text/html;charset=UTF-8" http-equiv=Content-Type>
  <title>Selectors API Level 1 — W3C</title>

  <style type="text/css">
	pre.idl { border:solid thin; background:#eee; color:#000; padding:0.5em }
	pre.idl :link, pre.idl :visited { color:inherit; background:transparent }

	div.example { border-left:double; padding-left:1em }
	dfn { font-style:normal; font-weight:bolder }
	em.ct { font-style:normal; font-weight:normal; font-variant:small-caps }
	p.note {  margin-left:2em; color:green; font-style:italic; font-weight:bold }
	p.note:before { content:"Заметка: " }
	.issue { padding:.5em; border:solid red }
	.issue:before { content:"Issue: " }
	code { color:#FF4500; }
	code :link, code :visited { color:inherit }
	.translator { border: solid 2px black; background-color: #EEE9E9; padding: 5px; font-size: 15px; margin-bottom: 20px; }
	</style>
  <link href="http://www.w3.org/StyleSheets/TR/W3C-REC" rel=stylesheet
   type="text/css">

 <body>
  <!-- Yandex.Metrika counter --> <script type="text/javascript"> (function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter36816840 = new Ya.Metrika({ id:36816840, clickmap:true, trackLinks:true, accurateTrackBounce:true }); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = "https://mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks"); </script> <noscript><div><img src="https://mc.yandex.ru/watch/36816840" style="position:absolute; left:-9999px;" alt="" /></div></noscript> <!-- /Yandex.Metrika counter -->

<p class="translator">
Этот документ является неофициальным переводом исходной английской версии <a href="https://www.w3.org/TR/selectors-api/" target="_blank" rel="nofollow">Selectors API Level 1</a>. Обратите внимание на то, что оригинальная версия документа существует только на английском языке. Данный перевод может содержать неточности и ошибки. Перевод выполнил <a href="http://topolyan.com/" target="_blank">Кирилл Топольян</a>, 2016.</p>

  <div class=head>
   <p><a href="http://www.w3.org/"><img alt=W3C height=48
    src="http://www.w3.org/Icons/w3c_home" width=72></a>

   <h1 id=title>Selectors API Level 1</h1>

   <h2 class="no-num no-toc" id=W3C-doctype>Рекомендация W3C от 21 февраля 2013</h2>

   <dl>
    <dt>Эта версия:

    <dd><a
     href="http://www.w3.org/TR/2013/REC-selectors-api-20130221/">http://www.w3.org/TR/2013/REC-selectors-api-20130221/</a>

    <dt>Последняя версия:

    <dd><a
     href="http://www.w3.org/TR/selectors-api/">http://www.w3.org/TR/selectors-api/</a>

    <dt>Предыдущие версии:

    <dd><a
     href="http://www.w3.org/TR/2012/PR-selectors-api-20121213/">http://www.w3.org/TR/2012/PR-selectors-api-20121213/</a>

    <dd><a
     href="http://www.w3.org/TR/2012/WD-selectors-api-20120628/">http://www.w3.org/TR/2012/WD-selectors-api-20120628/</a>

    <dd><a
     href="http://www.w3.org/TR/2009/CR-selectors-api-20091222/">http://www.w3.org/TR/2009/CR-selectors-api-20091222/</a>

    <dd><a
     href="http://www.w3.org/TR/2008/WD-selectors-api-20081114/">http://www.w3.org/TR/2008/WD-selectors-api-20081114/</a>

    <dd><a
     href="http://www.w3.org/TR/2007/WD-selectors-api-20071221/">http://www.w3.org/TR/2007/WD-selectors-api-20071221/</a>

    <dd><a
     href="http://www.w3.org/TR/2007/WD-selectors-api-20071019/">http://www.w3.org/TR/2007/WD-selectors-api-20071019/</a>

    <dd><a
     href="http://www.w3.org/TR/2006/WD-selectors-api-20060926/">http://www.w3.org/TR/2006/WD-selectors-api-20060926/</a>

    <dd><a
     href="http://www.w3.org/TR/2006/WD-selectors-api-20060525/">http://www.w3.org/TR/2006/WD-selectors-api-20060525/</a>

    <dt>Редакторы:

    <dd><a href="http://annevankesteren.nl/" target="_blank" rel="nofollow">Anne van Kesteren</a> (<a
     href="http://www.mozilla.org/">Mozilla</a>) &lt;<a
     href="mailto:annevk@annevk.nl">annevk@annevk.nl</a>&gt;

    <dd><a href="http://lachy.id.au/" target="_blank" rel="nofollow">Lachlan Hunt</a> &lt;<a
     href="mailto:lachlan.hunt@lachy.id.au">lachlan.hunt@lachy.id.au</a>&gt;
   </dl>

   <p>Смотрите <a
    href="http://dev.w3.org/2006/webapi/selectors-api/errata/errata-l1.html"><strong>страницу исправлений</strong></a>
    для этого документа, которая может содержать некоторые нормативные изменения.

   <p>Также смотрите <a
    href="http://www.w3.org/2003/03/Translations/byTechnology?technology=selectors-api"><strong>переводы</strong></a>.

   <p class=copyright><a
    href="http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright</a>
    © 2006-2013 <a href="http://www.w3.org/"><acronym
    title="World Wide Web Consortium">W3C</acronym></a><sup>®</sup> (<a
    href="http://www.csail.mit.edu/"><acronym
    title="Massachusetts Institute of Technology">MIT</acronym></a>, <a
    href="http://www.ercim.eu/"><acronym
    title="European Research Consortium for Informatics and Mathematics">ERCIM</acronym></a>,
    <a href="http://www.keio.ac.jp/">Keio</a>, <a
    href="http://ev.buaa.edu.cn/">Beihang</a>), все права защищены. W3C придерживается правил <a
    href="http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">ответственности</a>,
    <a
    href="http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">торговой марки</a>
    and <a
    href="http://www.w3.org/Consortium/Legal/copyright-documents">использования документов</a>.
  </div>

  <hr>

  <h2 class="no-num no-toc" id=abstract>Аннотация</h2>

  <p>Селекторы, которые широко используются в CSS, являются паттернами которые соответствуют
   элементам в древовидной структуре <a href="#SELECT"
   rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a><a href="#CSS21"
   rel=biblioentry>[CSS21]<!--{{CSS21}}--></a>. Спецификация Selectors API
   определяет методы получения нод <a
   href="#element"><code>Element</code></a> из <abbr
   title="Document Object Model">DOM</abbr> сопоставлением группы
   селекторов. Часто бывает желательным выполнять операции DOM на определенном
   наборе элементов в документе. Эти методы упрощают процесс
   приобретения определенных элементов, особенно по сравнению с более многословными
   техниками, определенными и используемыми в прошлом.

  <h2 class="no-num no-toc" id=sotd>Статус этого документа</h2>

  <p><em>Этот раздел описывает статус данного документа на момент его публикации. Другие документы могут заменять этот документ. Со списком текущих публикаций W3C и последней ревизией этого технического доклада можно ознакомиться в <a href="http://www.w3.org/TR/">индексе технических отчетов W3C</a>, http://www.w3.org/TR/.</em>

  <p><a href="http://www.w3.org/2008/webapps/">Рабочая группа веб-приложений (WebApps)</a> разработала комплексный <a
   href="http://dev.w3.org/2006/webapi/selectors-api-testsuite/">набор тестов Selectors
   API</a> и показала интероперабельность возможностей
   среди реализаций. Пожалуйста, посмотрите <a
   href="http://dev.w3.org/2006/webapi/selectors-api-testsuite/level1-baseline-report.html"
   title="Selectors API Implementation Report: Baseline Tests">отчет о реализации</a> Рабочей группы.

  <p>Пожалуйста, отправляйте комментарии об этом документе на <a
   href="mailto:public-webapps@w3.org">public-webapps@w3.org</a> (<a
   href="http://lists.w3.org/Archives/Public/public-webapps/" rel="nofollow">публичный архив</a>) с пометкой <kbd>[selectors-api]</kbd> в теме. (Заметьте, что до середины 2008 использовался другой архивный лист, так что некоторые старые сообщения <a
   href="http://lists.w3.org/Archives/Public/public-webapi/" rel="nofollow">архивированы здесь</a>).

  <p>Этот документ был разработан <a
   href="http://www.w3.org/2008/webapps/">Рабочей группой веб-приложений</a>.
   Полный <a
   href="http://dev.w3.org/cvsweb/2006/webapi/selectors-api/">список изменений</a> этого документа доступен.

  <p>Этот документ был рассмотрен членами W3C, разработчиками программного обеспечения, а также другими группами W3C и заинтересованными лицами, и одобрен Директором в качестве Рекомендации W3C. Это стабильный документ и может быть использован в качестве справочного материала или цитироваться из другого документа. Цель W3C в создании Рекомендации заключается в привлечении внимания к спецификации и способствовании ее широкому распространению. Это повышает функциональность и совместимость Сети.

  <p>Этот документ был подготовлен группой, работающей под <a
   href="http://www.w3.org/Consortium/Patent-Policy-20040205/">Патентной Политикой W3C от 5 февраля 2004</a>. W3C поддерживает <a
   href="http://www.w3.org/2004/01/pp-impl/42538/status"
   rel=disclosure>публичный список открытых патентов</a>, сделанных в связи с результатами деятельности группы; эта страница также включает в себя инструкции по раскрытию патента. Человек, который имеет фактическое знание патента, который удовлетворяет <a
   href="http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential">основным требованиям</a>, должен раскрывать информацию в соответствии c <a
   href="http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure">разделом 6 патентной политики W3C</a>.

  <h2 class="no-num no-toc" id=toc>Содержание</h2>
  <!--begin-toc-->

  <ul class=toc>
   <li><a href="#introduction"><span class=secno>1. </span>Введение</a>
    <ul class=toc>
     <li><a href="#examples"><span class=secno>1.1. </span>Примеры</a>
    </ul>

   <li><a href="#conformance"><span class=secno>2. </span>Требования к соответствию</a>
    <ul class=toc>
     <li><a href="#terminology"><span class=secno>2.1. </span>Терминология и соглашения</a>
    </ul>

   <li><a href="#interoperability"><span class=secno>3.
    </span>Вопросы интероперабельности</a>
    <ul class=toc>
     <li><a href="#extensibility"><span class=secno>3.1.
      </span>Расширяемость</a>
    </ul>

   <li><a href="#security"><span class=secno>4. </span>Вопросы безопасности</a>

   <li><a href="#privacy"><span class=secno>5. </span>Вопросы приватности
    </a>

   <li><a href="#the-apis"><span class=secno>6. </span>API</a>
    <ul class=toc>
     <li><a href="#interface-definitions"><span class=secno>6.1.
      </span>Определение интерфейсов</a>

     <li><a href="#findelements"><span class=secno>6.2. </span>Поиск элементов</a>

     <li><a href="#grammar"><span class=secno>6.3. </span>Грамматика</a>

     <li><a href="#processing-selectors"><span class=secno>6.4.
      </span>Обработка селекторов</a>

     <li><a href="#resolving-namespaces"><span class=secno>6.5.
      </span>Решение пространств имен</a>
    </ul>

   <li><a href="#examples0"><span class=secno>7. </span>Примеры</a>

   <li class=no-num><a href="#references">Ссылки</a>
    <ul class=toc>
     <li class=no-num><a href="#normative-references">Нормативные ссылки</a>

     <li class=no-num><a href="#informative-references">Информативные ссылки</a>
    </ul>

   <li class=no-num><a href="#acknowledgements">Благодарности</a>
  </ul>
  <!--end-toc-->

  <h2 id=introduction><span class=secno>1. </span>Введение</h2>

  <p><em>Этот раздел не является нормативным.</em>

  <p>Эта спецификация предоставляет методы для выбора и тестирования элементов
   в зависимости от того соответствуют ли они заданному селектору. С этими методами проще
   сопоставлять сет нод <a href="#element"><code>Element</code></a>
   основываясь на специальном критерии, чем в дальнейшем фильтровать результат вызова других методов, таких как <code>getElementsByTagName()</code>.

  <h3 id=examples><span class=secno>1.1. </span>Примеры</h3>

  <p><em>Этот раздел не является нормативным.</em>

  <p>Некоторые примеры на ECMAScript <a href="#ECMA-262-5.1"
   rel=biblioentry>[ECMA-262-5.1]<!--{{ECMA-262-5.1}}--></a>:

  <div class=example>
   <p>Этот пример таблицы написан на HTML 4.01.

   <pre>&lt;table id="score">
  &lt;thead>
    &lt;tr>
      &lt;th>Test
      &lt;th>Result
  &lt;tfoot>
    &lt;tr>
      &lt;th>Average
      &lt;td>82%
  &lt;tbody>
    &lt;tr>
      &lt;td>A
      &lt;td>87%
    &lt;tr>
      &lt;td>B
      &lt;td>78%
    &lt;tr>
      &lt;td>C
      &lt;td>81%
&lt;/table></pre>

   <p>Для того чтобы получить ячейки, содержащие результаты таблицы, что может
    быть сделано, к примеру, чтобы построить график значений, есть как
    минимум два подхода, которые можно использовать. Использование только API для DOM
    Level 2, это требует скрипт вроде следующего, который перебирает
    каждый <code>tr</code> внутри каждого <code>tbody</code> в
    <code>table</code>, чтобы найти вторую ячейку каждой строки.

   <pre>var table = document.getElementById("score");
var groups = table.tBodies;
var rows = null;
var cells = [];

for (var i = 0; i &lt; groups.length; i++) {
  rows = groups[i].rows;
  for (var j = 0; j &lt; rows.length; j++) {
    cells.push(rows[j].cells[1]);
  }
}</pre>

   <p>Второй метод это использование метода <code
    title=document-selectallelements>querySelectorAll()</code>, с которым скрипт становится намного более кратким.

   <pre>var cells = document.querySelectorAll("#score&gt;tbody&gt;tr&gt;td:nth-of-type(2)");</pre>

   <p>Заметьте, что скрипт работает на DOM, и работает независимо от
    синтаксиса используемого при создании документа. Таким образом, этот скрипт также будет правильно
    работать для такой же таблицы созданной в правильном XHTML вместо HTML, или динамически созданным и вставленым в документ с помощью DOM API.
  </div>

  <h2 id=conformance><span class=secno>2. </span>Требования к соответствию</h2>

  <p>Все диаграммы, примеры и заметки в данной спецификации не являются нормативными, также как все разделы помеченные не-нормативными.
   Все остальное в данном спецификации является нормативным.

  <p>Ключевые слова <em class=ct>must</em>, <em class=ct>must not</em>, <em
   class=ct>should</em>, <em class=ct>may</em> и <em
   class=ct>recommended</em> в нормативных частях этого документа должны интерпретироваться как описано в RFC 2119 <a href="#RFC2119"
   rel=biblioentry>[RFC2119]<!--{{!RFC2119}}--></a>.

  <p>Следующие классы соответствия определены (и рассматриваются) данной спецификацией:

  <dl>
   <dt><dfn id=conforming-user-agent>соответствующий агент пользователя</dfn>

   <dd>Агент пользователя реализующий интерфейсы описанные данной спецификацией и соответствует всем <em class=ct>must</em>-level критериям, которые применяются к реализациям.

   <dt><dfn id=conforming-application>соответствующее приложение</dfn>

   <dd>Приложение использующее интерфейсы описанные данной спецификацией
    и соответствующие всем <em class=ct>must</em>-level критериям, которые применяются к приложениям.
  </dl>

  <h3 id=terminology><span class=secno>2.1. </span>Терминология и соглашения</h3>

  <p>Терминология используемая в данной спецификации та же, что и в Селекторах <a
   href="#SELECT" rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a>.

  <p>Следующие функции определены в спецификации DOM Level 3 Core
   <a href="#DOM-LEVEL-3-CORE"
   rel=biblioentry>[DOM-LEVEL-3-CORE]<!--{{!DOM-LEVEL-3-CORE}}--></a>:

  <ul>
   <li><dfn id=document title=dom-document><code>Document</code></dfn>
    интерфейс.

   <li><dfn id=documentfragment><code>DocumentFragment</code></dfn>
    интерфейс.

   <li><dfn id=element><code>Element</code></dfn> интерфейс.

   <li><dfn id=nodelist><code>NodeList</code></dfn> интерфейс.
  </ul>

  <p>Требования соответствия выраженные в виде алгоритмов или конкретных шагов могут (<em
   class=ct>may</em>) быть реализованы любым способом, до тех пор пока конечный результат эквивалентен.

  <p>IDL используемый в этой спецификации использует синтаксис определенный в Web IDL <a
   href="#DOM-BINDINGS"
   rel=biblioentry>[DOM-BINDINGS]<!--{{!DOM-BINDINGS}}--></a>.

  <p>Конструкция "<code>Foo</code> объект", где <code>Foo</code> является интерфейсом, иногда используется вместо более точного
   "объект реализующий <code>Foo</code> интерфейс".

  <h2 id=interoperability><span class=secno>3. </span>Вопросы интероперабельности</h2>

  <p><em>Этот раздел не является нормативным.</em>

  <p>Некоторые реализации могут иметь разные уровни поддержки Селекторов. Если некоторым реализациям не хватает поддержки некоторых селекторов, то использование этих селекторов выдаст ошибку при возвращении ожидаемых результатов. Авторы советуют проверять исключения DOM
   выданные этими API и обеспечивать запасной вариант для плавной деградации.

  <h3 id=extensibility><span class=secno>3.1. </span>Расширяемость</h3>

  <p><em>Этот раздел не является нормативным.</em>

  <p>Расширения для API определены в этой спецификации <em>настоятельно нерекомендуемыми</em>. Реализаторы, Рабочие группы и прочие заинтересованные стороны должны обсуждать расширения на соответствующем публичном форуме, таком как <a
   href="mailto:public-webapps@w3.org">public-webapps@w3.org</a>.

  <h2 id=security><span class=secno>4. </span>Вопросы безопасности</h2>

  <p>Ожидается, что реализация данной спецификации не вводит новых рисков безопасности для пользователей.

  <p>Если, в любое время, реализация обнаруживает ситуацию которая может нарушить политику безопасности, реализация может (<em class=ct>may</em>) прервать действие и выдать ошибку безопасности. Если возникает любое другое условие ошибки, которое
   не покрывается напрямую этой или другой релевантной спецификацией, реализация может (<em class=ct>may</em>) прервать действие и выдать соответствующее исключение, основанное на особенностях языка или реализатора.

  <h2 id=privacy><span class=secno>5. </span>Вопросы приватности</h2>

  <p>Кража истории это потенциальная проблема приватности, потому что
   псевдо-класс <code>:visited</code> в Селекторах <a href="#SELECT"
   rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a> позволяет авторам запрашивать
   какие ссылки были посещены.

  <p class=note>Это не новая проблема, это уже может использоваться
   с помощью существующих CSS и DOM API, таких как <code>getComputedStyle()</code>
   <a href="#DOM-LEVEL-2-STYLE"
   rel=biblioentry>[DOM-LEVEL-2-STYLE]<!--{{DOM-LEVEL-2-STYLE}}--></a>.

  <div class=example>
   <p>В этом примере, <var>vlinks</var> получит список ссылок которые пользователь посетил. Затем автор может получить список URI и потенциально использовать это знание.

   <pre>var vlinks = document.querySelectorAll(":visited");
for (var i = 0; i &lt; vlinks.length; i++) {
  doSomethingEvil(vlinks[i].href);
}</pre>
  </div>

  <p>Как <a href="http://www.w3.org/TR/css3-selectors/#link">определено в
   <cite>Селекторах</cite></a> (<a href="#SELECT"
   rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a>, раздел 6.6.1), пользовательские агенты могут (<em class=ct>may</em>) обработать все ссылки как непосещенные ссылки. Рекомендуется (<em
   class=ct>recommended</em>), чтобы реализации вели себя стабильно с другими использованиями Селекторов поддерживаемыми агентом пользователя.

  <h2 id=the-apis><span class=secno>6. </span>API</h2>

  <p>Термин <dfn id=first>первый</dfn> используемый в определениях
   методов описанных этой спецификацией, означает <em>первый в порядке документа</em>. Термин <dfn id=document-order>порядок документа</dfn> означает поиск в глубину прямого порядка обхода дерева DOM или поддерева в вопросе.
   Термин <dfn id=context-node>context node</dfn> refers to the node upon
   which the method was invoked. The term <dfn id=subtrees>subtrees</dfn>
   refers to the collection of elements that are descendants of the <a
   href="#context-node">context node</a>. The term <dfn
   id=matching-element-node>matching <code>Element</code> node</dfn> refers
   to an <a href="#element"><code>Element</code></a> node that matches the <a
   href="#selector-string">selector string</a> (<var>selectors</var>) that
   was passed to the method, according to the rules for matching elements
   defined in Selectors <a href="#SELECT"
   rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a>.

  <h3 id=interface-definitions><span class=secno>6.1. </span>Определение интерфейсов</h3>

  <pre class=idl>partial interface <a href="#document"
   title=dom-document>Document</a> {
  Element?  <a href="#queryselector"
   title=queryselector>querySelector</a>(DOMString selectors);
  NodeList  <a
   href="#queryselectorall"
   title=queryselectorall>querySelectorAll</a>(DOMString selectors);
};

partial interface <a
   href="#documentfragment">DocumentFragment</a> {
  Element?  <a
   href="#queryselector"
   title=queryselector>querySelector</a>(DOMString selectors);
  NodeList  <a
   href="#queryselectorall"
   title=queryselectorall>querySelectorAll</a>(DOMString selectors);
};

partial interface <a
   href="#element">Element</a> {
  Element?  <a href="#queryselector"
   title=queryselector>querySelector</a>(DOMString selectors);
  NodeList  <a
   href="#queryselectorall"
   title=queryselectorall>querySelectorAll</a>(DOMString selectors);
};
</pre>

  <h3 id=findelements><span class=secno>6.2. </span>Поиск элементов</h3>

  <p>The <var>selectors</var> argument for the <a
   href="#queryselector"><code>querySelector</code></a> and <a
   href="#queryselectorall"><code>querySelectorAll</code></a> methods accepts
   a <a href="#selector-string">selector string</a>.

  <p>The <dfn id=queryselector
   title=queryselector><code>querySelector()</code></dfn> methods on the <a
   href="#document"><code title=dom-document>Document</code></a>, <a
   href="#documentfragment"><code>DocumentFragment</code></a>, and <a
   href="#element"><code>Element</code></a> interfaces <em class=ct>must</em>
   return the <a href="#first">first</a> matching <a
   href="#element"><code>Element</code></a> node within the <a
   href="#subtrees">subtrees</a> of the <a href="#context-node">context
   node</a>. If there is no matching <a
   href="#element"><code>Element</code></a>, the method <em
   class=ct>must</em> return <code>null</code>.

  <p>The <dfn id=queryselectorall
   title=queryselectorall><code>querySelectorAll()</code></dfn> methods on
   the <a href="#document"><code title=dom-document>Document</code></a>, <a
   href="#documentfragment"><code>DocumentFragment</code></a>, and <a
   href="#element"><code>Element</code></a> interfaces <em class=ct>must</em>
   return a <a href="#nodelist"><code>NodeList</code></a> containing all of
   the matching <a href="#element"><code>Element</code></a> nodes within the
   <a href="#subtrees">subtrees</a> of the <a href="#context-node">context
   node</a>, in <a href="#document-order">document order</a>. If there are no
   matching nodes, the method <em class=ct>must</em> return an empty <a
   href="#nodelist"><code>NodeList</code></a>.

  <p>When either <a href="#queryselector"><code>querySelector</code></a> or
   <a href="#queryselectorall"><code>querySelectorAll</code></a> are invoked,
   the implementation <em class=ct>must</em> follow these steps:

  <ol>
   <li>
    <p>Let <var>parsed selector</var> be the result of running the algorithm
     to <a href="#parse-a-selector">parse a selector</a> with
     <var>selectors</var> as the input.

   <li>
    <p>The implementation must then run the algorithm to <a
     href="#evaluate-a-selector">evaluate a selector</a> against element
     nodes in the specified <span title=concept-tree>tree</span> or <a
     href="#subtrees">subtrees</a> using <var>parsed selector</var> as the
     selector to return the required result for the invoked method.
  </ol>

  <p>The <a href="#nodelist"><code>NodeList</code></a> object returned by the
   <code>querySelectorAll()</code> method <em class=ct>must</em> be static,
   not <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#td-live"
   title="Document Object Model Core">live</a> (<a href="#DOM-LEVEL-3-CORE"
   rel=biblioentry>[DOM-LEVEL-3-CORE]<!--{{!DOM-LEVEL-3-CORE}}--></a>,
   section 1.1.1). Subsequent changes to the structure of the underlying
   document <em class=ct>must not</em> be reflected in the <a
   href="#nodelist"><code>NodeList</code></a> object. This means that the
   object will instead contain a list of matching <a
   href="#element"><code>Element</code></a> nodes that were in the document
   at the time the list was created.

  <h3 id=grammar><span class=secno>6.3. </span>Грамматика</h3>

  <p>A <dfn id=selector-string>selector string</dfn> is a list of one or more
   <a href="http://dev.w3.org/csswg/selectors4/#complex">group of
   selectors</a> (<a href="#SELECT"
   rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a>, section 5) that <em
   class=ct>may</em> be surrounded by whitespace and matches the
   <code>dom_selectors_group</code> production.

  <pre>
dom_selectors_group
  : S* [ selectors_group ] S*
  ;
</pre>

  <p>The productions for <code>selectors_group</code> is defined in Selectors
   Level 3 (<a href="#SELECT" rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a>,
   section 10.1). These groups of selectors <em class=ct>should not</em> use
   <a href="#namespace-prefix-needs-to-be-resolved"
   title=need-to-resolve>namespace prefixes that need to be resolved</a>.

  <p class=note>Implementers are advised that if <code>null</code> or
   <code>undefined</code> are passed as the value of the <var>selectors</var>
   parameter, they are to be handled as defined in WebIDL <a
   href="#DOM-BINDINGS"
   rel=biblioentry>[DOM-BINDINGS]<!--{{!DOM-BINDINGS}}--></a>. Authors are
   advised to avoid passing these values.

  <p class=note>Authors are advised that while the use of pseudo-elements in
   selectors is permitted, they will not match any elements in the document,
   and thus would not result in any elements being returned. Therefore,
   authors are advised to avoid the use of pseudo-elements in selectors that
   are passed to the methods defined in this specification.

  <h3 id=processing-selectors><span class=secno>6.4. </span>Обработка селекторов</h3>

  <p>The steps to <dfn id=parse-a-selector>parse a selector</dfn> are as
   follows:

  <ol>
   <li>
    <p>Let <var>selectors</var> be the <a href="#selector-string">selector
     string</a> input to this algorithm.

   <li>
    <p>Let <var>result</var> be the group of selectors returned as a result
     of parsing the <var>selectors</var> according to the grammar for
     <code>dom_selectors_group</code> defined above.

   <li>
    <p>If <var>result</var> is <a
     href="http://www.w3.org/TR/css3-selectors/#Conformance">invalid</a> (<a
     href="#SELECT" rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a>, section
     12), <a
     href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMException-SYNTAX_ERR">raisea
     a <code>SYNTAX_ERR</code> exception</a> (<a href="#DOM-LEVEL-3-CORE"
     rel=biblioentry>[DOM-LEVEL-3-CORE]<!--{{!DOM-LEVEL-3-CORE}}--></a>,
     section 1.4) and abort this algorithm.

   <li>Return <var>result</var>.
  </ol>

  <p>The steps to <dfn id=evaluate-a-selector>evaluate a selector</dfn> are
   as follows:

  <ol>
   <li>
    <p>Let <var title="">element</var> be the element being evaluated.

   <li>
    <p>Let <var>selector group</var> be the selector input into this
     algotihm.

   <li>
    <p>If any selector in <var>selector group</var> matches <var
     title="">element</var>, return true. Otherwise, return false.
  </ol>

  <p>Selectors are evaluated against a given element in the context of the
   entire DOM tree in which the element is located.

  <p>If the user agent also supports some level of CSS, the implementation
   <em class=ct>should</em> support the same set of selectors in both these
   APIs and CSS.

  <h3 id=resolving-namespaces><span class=secno>6.5. </span>Решение пространств имен</h3>

  <p>If the group of selectors include <a
   href="#namespace-prefix-needs-to-be-resolved"
   title=need-to-resolve>namespace prefixes that need to be resolved</a>, the
   implementation <em class=ct>must</em> <a
   href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMException-SYNTAX_ERR">raise
   a <code>SYNTAX_ERR</code> exception</a> (<a href="#DOM-LEVEL-3-CORE"
   rel=biblioentry>[DOM-LEVEL-3-CORE]<!--{{!DOM-LEVEL-3-CORE}}--></a>,
   section 1.4).

  <p class=note>This specification does not provide support for resolving
   arbitrary namespace prefixes. However, support for a namespace prefix
   resolution mechanism may be considered for inclusion in a future version
   of this specification.

  <p>A <dfn id=namespace-prefix-needs-to-be-resolved
   title=need-to-resolve>namespace prefix needs to be resolved</dfn> if the
   namespace component is neither empty (e.g. <code>|div</code>),
   representing the null namespace, or an asterisk (e.g. <code>*|div</code>),
   representing any namespace. Since the asterisk or empty namespace prefix
   do not need to be resolved, implementations that support the namespace
   syntax in Selectors <em class=ct>must</em> support these. <a
   href="#SELECT" rel=biblioentry>[SELECT]<!--{{!SELECT}}--></a>

  <h2 id=examples0><span class=secno>7. </span>Примеры</h2>

  <div class=example>
   <p>The following examples make use of this sample XHTML document.

   <pre>&lt;html xmlns="http://www.w3.org/1999/xhtml">
  &lt;head>
    &lt;title&gt;Selectors API Example&lt;/title&gt;
  &lt;/head>
  &lt;body>
    &lt;div id="foo"&gt;
      &lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
      &lt;p class="error"&gt;This is a sample error&lt;/p&gt;
    &lt;/div&gt;
    &lt;div id="bar"&gt;
      &lt;p&gt;...&lt;/p&gt;
    &lt;/div&gt;
  &lt;/body>
&lt;/html></pre>

   <p>The methods accept a group of selectors (comma separated) as the
    argument. The following example would select all <code>p</code> elements
    in the document that have a class of either "<code>error</code>" or
    "<code>warning</code>".

   <pre>var alerts = document.querySelectorAll("p.warning, p.error");</pre>

   <p>The <code title=document-selectelement>querySelector()</code> methods
    also accept a group of selectors and they will return the first element
    (if any) that matches any of the selectors in the group.

   <pre>var x = document.querySelector("#foo, #bar");</pre>

   <p><var>x</var> would contain the first element in the document with an ID
    of either <code>foo</code> or <code>bar</code>, or <code>null</code> if
    there is no such element. In the sample document above, it would select
    the <code>div</code> element with the ID of <code>foo</code> because it
    is first in <a href="#document-order">document order</a>. The order of
    the selectors used in the parameter has no effect and would have the same
    result if the order were reversed, as in:

   <pre>var x = document.querySelector("#bar, #foo");</pre>

   <p>The methods can also be invoked on elements. In the following example,
    assume the event handler is registered on an element, and thus the method
    is invoked on the target element of the event.

   <pre>function handle(evt) {
  var x = evt.target.querySelector("span");
  ...
  // Do something with x
}</pre>

   <p>Even though the method is invoked on an element, selectors are still
    evaluated in the context of the entire document. In the following
    example, the method will still match the <code>div</code> element's child
    <code>p</code> element, even though the <code>body</code> element is not
    a descendant of the <code>div</code> element itself.

   <pre>var div = document.getElementById("bar");
var p = div.querySelector("body p");</pre>

   <p>Given this sample fragment that contains a list as a navigation menu:

   <pre>&lt;ul class="nav"&gt;
  &lt;li&gt;&lt;a href="/"&gt;Home&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/products"&gt;Products&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="/about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</pre>

   <p>The following example selects all the <code>li</code> elements and
    demonstrates how to iterate through the collection in a <a
    href="#nodelist"><code>NodeList</code></a>.

   <pre>var lis = document.querySelectorAll("ul.nav&gt;li");
for (var i = 0; i &lt; lis.length; i++) {
  process(lis.item(i));
}</pre>

   <p>In ECMAScript, the language binding also allows <a
    href="#nodelist"><code>NodeList</code></a>s to be addressed using the
    array notation, so that loop could be rewritten like this:

   <pre>for (var i = 0; i &lt; lis.length; i++) {
  process(lis[i]);
}</pre>

   <p>Since the <a href="#nodelist"><code>NodeList</code></a> objects
    returned by these methods are not live, changes to the DOM do not affect
    the content of the list. Consider the <code>process()</code> function
    called in the previous examples is defined as follows:

   <pre>function process(elmt) {
  elmt.parentNode.removeChild(elmt);
}</pre>

   <p>This would cause each selected element to be removed from the DOM, but
    each element will remain in the <a
    href="#nodelist"><code>NodeList</code></a>. If the list were a live <a
    href="#nodelist"><code>NodeList</code></a>, removing an item from the DOM
    would also remove the element from the list and adjust the indexes of
    subsequent elements. That would have adverse effects upon the loop
    because not all selected elements would be processed.

   <p>In documents comprising elements from multiple namespaces, it's
    possible that some elements from different namespaces share the same
    local name. Since this API does not natively support a namespace
    resolution mechanism for selectors, obtaining a list of such elements
    from a specific namespace, excluding all others, requires additional
    processing to filter the result. The following example illustrates a
    document containing <code>video</code> elements from both the SVG and
    XHTML namespaces.

   <pre>&lt;svg id=&quot;svg1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;
               xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
  &lt;video id=&quot;svgvideo1&quot; xlink:href=&quot;myvideo.ogg&quot; width=&quot;320&quot; height=&quot;240&quot;/&gt;
  &lt;foreignObject width=&quot;100&quot; height=&quot;100&quot;&gt;
    &lt;video id=&quot;htmlvideo1&quot; src=&quot;myvideo.ogg&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;No video1&lt;/video&gt;
  &lt;/foreignObject&gt;
&lt;/svg&gt;</pre>

   <p>The following script demonstrates how to first select the
    <code>video</code> elements and then filter out the unwanted elements
    based on their namespace.

   <pre>var elms = document.querySelectorAll("svg video");
var result = new Array();
var svgns = "http://www.w3.org/2000/svg"

for(var i = 0; i &lt; elms.length; i++) {
  if(elms[i].namespaceURI == svgns) {
    result.push(elms[i]);
  }
}</pre>
  </div>

  <h2 class=no-num id=references>Ссылки</h2>

  <h3 class=no-num id=normative-references>Нормативные ссылки</h3>
  <!--begin-normative-->
  <!-- Sorted by label -->

  <dl class=bibliography>
   <dt style="display: none"><!-- keeps the doc valid if the DL is empty -->
    <!---->

   <dt id=DOM-BINDINGS>[DOM-BINDINGS]

   <dd>Cameron McCormack. <a
    href="http://www.w3.org/TR/2012/CR-WebIDL-20120419/"><cite>Web
    IDL.</cite></a> 19 April 2012. Кандидат в Рекомендации W3C. (Работа в процессе). URL: <a
    href="http://www.w3.org/TR/2012/CR-WebIDL-20120419/">http://www.w3.org/TR/2012/CR-WebIDL-20120419/</a>
   </dd>
   <!---->

   <dt id=DOM-LEVEL-3-CORE>[DOM-LEVEL-3-CORE]

   <dd>Gavin Nicol; и соавторы. <a
    href="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407"><cite>Document
    Object Model (DOM) Level 3 Core Specification.</cite></a> 7 апреля 2004.
    Рекомендация W3C. URL: <a
    href="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407">http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407</a>
   </dd>
   <!---->

   <dt id=RFC2119>[RFC2119]

   <dd>S. Bradner. <a href="http://www.ietf.org/rfc/rfc2119.txt"><cite>Key
    words for use in RFCs to Indicate Requirement Levels.</cite></a> Internet
    RFC 2119. URL: <a
    href="http://www.ietf.org/rfc/rfc2119.txt">http://www.ietf.org/rfc/rfc2119.txt</a>
   </dd>
   <!---->

   <dt id=SELECT>[SELECT]

   <dd>Tantek Çelik; и соавторы. <a
    href="http://www.w3.org/TR/2011/REC-css3-selectors-20110929/"><cite>Selectors
    Level 3.</cite></a> 29 сентября 2011. Рекомендация W3C. URL: <a
    href="http://www.w3.org/TR/2011/REC-css3-selectors-20110929/">http://www.w3.org/TR/2011/REC-css3-selectors-20110929/</a>
   </dd>
   <!---->
  </dl>
  <!--end-normative-->

  <h3 class=no-num id=informative-references>Информативные ссылки</h3>
  <!--begin-informative-->
  <!-- Sorted by label -->

  <dl class=bibliography>
   <dt style="display: none"><!-- keeps the doc valid if the DL is empty -->
    <!---->

   <dt id=CSS21>[CSS21]

   <dd>Bert Bos; и соавторы. <a
    href="http://www.w3.org/TR/2011/REC-CSS2-20110607/"><cite>Cascading Style
    Sheets Level 2 Revision 1 (CSS 2.1) Specification.</cite></a> 7 июня
    2011. Рекомендация W3C. URL: <a
    href="http://www.w3.org/TR/2011/REC-CSS2-20110607/">http://www.w3.org/TR/2011/REC-CSS2-20110607/</a>
   </dd>
   <!---->

   <dt id=DOM-LEVEL-2-STYLE>[DOM-LEVEL-2-STYLE]

   <dd>Chris Wilson; Philippe Le Hégaret; Vidur Apparao. <a
    href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/"><cite>Document
    Object Model (DOM) Level 2 Style Specification.</cite></a> 13 ноября
    2000. Рекомендация W3C. URL: <a
    href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/">http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/</a>
   </dd>
   <!---->

   <dt id=ECMA-262-5.1>[ECMA-262-5.1]

   <dd><a
    href="http://www.ecma-international.org/publications/standards/Ecma-262.htm"><cite>ECMAScript
    Language Specification, Edition 5.1.</cite></a> Июнь 2011. ISO/IEC
    16262:2011. URL: <a
    href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">http://www.ecma-international.org/publications/standards/Ecma-262.htm</a>
   </dd>
   <!---->
  </dl>
  <!--end-informative-->

  <h2 class=no-num id=acknowledgements>Благодарности</h2>

  <p>Редакторы хотели бы поблагодарить следующих людей, которые
   внесли свой вклад в эту спецификацию (упорядочены по имени):

  <p>Adam van den Hoven, Alan Gresley, Alex Russell, Arthur Barstow, Aryeh
   Gregor, Björn Höhrmann, Boris Zbarsky, Cameron McCormack, Charles
   McCathieNevile, Chris Wilson, Christophe Jolif, Daniel Glazman, Daniel
   Schierbeck, Dave Massy, David "liorean" Andersson, David Greenspan, David
   Håsäther, Dean Jackson, Doug Schepers, Erik Dahlström, Francois Remy,
   Hallvord R. M. Steen, Henri Sivonen, Ian Hickson, Ivan Enderlin, Jean-Yves
   Bitterlich, Jim Ley, João Eiras, John Resig, Jon Ferraiolo, Jonas
   Sicking, Jorgen Horstink, Kang-Hao (Kenny) Lu, Karl Dubost, Kartikaya
   Gupta, L. David Baron, Maciej Stachowiak, Magnus Kristiansen, Marat
   Tanalin, Martijn, Masataka Yakura, Mihai Sucan, Mohamed Zergaoui, Nicholas
   C. Zakas, Nicolas Mendoza, Norbert Lindenberg, Philip Taylor, Robert
   Sayre, Robin Berjon, Sander, Sergey Ilinsky, Simon Pieters, Steven
   Pemberton, Stewart Brodie Tab Atkins Jr., Tarquin Wilton-Jones, Travis
   Leithead, и William J. Edney

  <p>Особое спасибо John Resig и Øyvind Stenhaug за их значительный
   вклад в серии тестов.

  <p>Спасибо всем тем, кто помог улучшить эту спецификацию, присылая предложения и исправления.

